<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- default-init-method="init" default-destroy-method="destroy" -->

	<!-- <context:annotation-config /> -->
	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"></bean> <!-- another way to use those annotations -->
	<!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api/1.3.2 -->

	<!-- what if i have 100 classes with init and destroy methods? -->
	<!-- <bean id="studentDAO"
		class="com.seleniumexpress.beanlifecycle.annotation.StudentDAO"
		init-method="init" destroy-method="destroy">
		<property name="driver" value="com.mysql.cj.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/ESNew" />
		<property name="userName" value="root" />
		<property name="password" value="admin" />
	</bean> -->

	<bean id="hello"
		class="com.seleniumexpress.beanlifecycle.annotation.Hello" />
</beans>

<!-- there are 3 ways to call life cycle bean methods: 1. annotations 2. 
	xml configuration 3. using an interface (not recommended) -->